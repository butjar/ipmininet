<%
   ifaces_head, ifaces_tail = node['openr'].interfaces[0], node['openr'].interfaces[1:]
   ifaces = reduce(lambda x,y: x + ',' + y.name, ifaces_tail, ifaces_head.name)
%>\
--alloc_prefix_len=${node['openr'].alloc_prefix_len} \
--assume_drained=${node['openr'].assume_drained} \
--config_store_filepath="${node['openr'].config_store_filepath}" \
--decision_debounce_max_ms=${node['openr'].decision_debounce_max_ms} \
--decision_debounce_min_ms=${node['openr'].decision_debounce_min_ms} \
--decision_rep_port=${node['openr'].decision_rep_port} \
--domain=${node['openr'].domain} \
--dryrun=${node['openr'].dryrun} \
--enable_subnet_validation=${node['openr'].enable_subnet_validation} \
--enable_fib_sync=${node['openr'].enable_fib_sync} \
--enable_health_checker=${node['openr'].enable_health_checker} \
--enable_legacy_flooding=${node['openr'].enable_legacy_flooding} \
--enable_lfa=${node['openr'].enable_lfa} \
--enable_netlink_fib_handler=${node['openr'].enable_netlink_fib_handler} \
--enable_netlink_system_handler=${node['openr'].enable_netlink_system_handler} \
--enable_old_decision_module=${node['openr'].enable_old_decision_module} \
--enable_perf_measurement=${node['openr'].enable_perf_measurement} \
--enable_prefix_alloc=${node['openr'].enable_prefix_alloc} \
--enable_rtt_metric=${node['openr'].enable_rtt_metric} \
--enable_secure_thrift_server=${node['openr'].enable_secure_thrift_server} \
--enable_segment_routing=${node['openr'].enable_segment_routing} \
--enable_spark=${node['openr'].enable_spark} \
--enable_v4=${node['openr'].enable_v4} \
--enable_watchdog=${node['openr'].enable_watchdog} \
--fib_handler_port=${node['openr'].fib_handler_port} \
--fib_rep_port=${node['openr'].fib_rep_port} \
--health_checker_ping_interval_s=${node['openr'].health_checker_ping_interval_s} \
--health_checker_rep_port=${node['openr'].health_checker_rep_port} \
--ifname_prefix="${node['openr'].iface_prefixes}" \
--iface_regex_exclude="${node['openr'].iface_regex_exclude}" \
--iface_regex_include="${node['openr'].iface_regex_include}" \
--ip_tos=${node['openr'].ip_tos} \
--key_prefix_filters="${node['openr'].key_prefix_filters}" \
--kvstore_flood_msg_per_sec=${node['openr'].kvstore_flood_msg_per_sec} \
--kvstore_flood_msg_burst_size=${node['openr'].kvstore_flood_msg_burst_size} \
--kvstore_flood_msg_per_sec=${node['openr'].kvstore_flood_msg_per_sec} \
--kvstore_ttl_decrement_ms=${node['openr'].kvstore_ttl_decrement_ms} \
--kvstore_zmq_hwm=${node['openr'].kvstore_zmq_hwm} \
--link_flap_initial_backoff_ms=${node['openr'].link_flap_initial_backoff_ms} \
--link_flap_max_backoff_ms=${node['openr'].link_flap_max_backoff_ms} \
--link_monitor_cmd_port=${node['openr'].link_monitor_cmd_port} \
--loopback_iface="${node['openr'].loopback_iface}" \
--memory_limit_mb=${node['openr'].memory_limit_mb} \
--minloglevel=${node['openr'].min_log_level} \
--node_name=${node['openr'].node_name} \
--override_loopback_addr=${node['openr'].override_loopback_addr} \
--prefix_manager_cmd_port=${node['openr'].prefix_manager_cmd_port} \
--prefixes="${node['openr'].prefixes}" \
--redistribute_ifaces="${node['openr'].redistribute_ifaces}" \
--seed_prefix="${node['openr'].seed_prefix}" \
--set_leaf_node=${node['openr'].set_leaf_node} \
--set_loopback_address=${node['openr'].set_loopback_addr} \
--spark_fastinit_keepalive_time_ms=${node['openr'].spark_fastinit_keepalive_time_ms} \
--spark_hold_time_s=${node['openr'].spark_hold_time_s} \
--spark_keepalive_time_s=${node['openr'].spark_keepalive_time_s} \
--static_prefix_alloc=${node['openr'].static_prefix_alloc} \
--tls_acceptable_peers="${node['openr'].tls_acceptable_peers}" \
--tls_ecc_curve_name="${node['openr'].tls_ecc_curve_name}" \
--tls_ticket_seed_path="${node['openr'].tls_ticket_seed_path}" \
--x509_ca_path="${node['openr'].x509_ca_path}" \
--x509_cert_path="${node['openr'].x509_cert_path}" \
--x509_key_path="${node['openr'].x509_key_path}" \
--logbufsecs=0 \
--logtostderr \
--max_log_size=1 \
--v=${node['openr'].verbosity} \
